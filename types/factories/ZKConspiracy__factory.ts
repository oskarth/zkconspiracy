/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKConspiracy, ZKConspiracyInterface } from "../ZKConspiracy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "tapee",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "attestations",
        type: "uint32",
      },
    ],
    name: "Attestation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Registration",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tapee",
        type: "bytes32",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract Hasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b5060405162001bed38038062001bed83398181016040528101906200007b91906200053d565b818160008263ffffffff1611620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c090620007fc565b60405180910390fd5b60208263ffffffff161062000115576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010c906200081e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508163ffffffff1660808163ffffffff1660e01b8152505060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505060019003906000526020600020016000909190919091505560018190806001815401808255809150506001900390600052602060002001600090919091909150556000600190505b8363ffffffff168163ffffffff1610156200027657620002148283620002e860201b60201c565b9150600282908060018154018082558091505060019003906000526020600020016000909190919091505560018290806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050620001ed565b50620002898182620002e860201b60201c565b60046000606481106200029857fe5b018190555050505060016068819055508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505062000948565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1062000352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034990620007b8565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10620003ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b190620007da565b60405180910390fd5b620003c462000493565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b81526004016200043691906200079b565b60206040518083038186803b1580156200044f57600080fd5b505afa15801562000464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200048a919062000511565b91505092915050565b6040518060400160405280600290602082028036833780820191505090505090565b600081519050620004c681620008e0565b92915050565b600081519050620004dd81620008fa565b92915050565b600081519050620004f48162000914565b92915050565b6000815190506200050b816200092e565b92915050565b6000602082840312156200052457600080fd5b60006200053484828501620004cc565b91505092915050565b6000806000606084860312156200055357600080fd5b60006200056386828701620004e3565b93505060206200057686828701620004fa565b92505060406200058986828701620004b5565b9150509250925092565b6000620005a1838362000610565b60208301905092915050565b620005b8816200084a565b620005c4818462000862565b9250620005d18262000840565b8060005b8381101562000608578151620005ec878262000593565b9650620005f98362000855565b925050600181019050620005d5565b505050505050565b6200061b8162000892565b82525050565b6000620006306020836200086d565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b6000620006726021836200086d565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620006da6027836200086d565b91507f5f747265654c6576656c732073686f756c64206265206772656174657220746860008301527f616e207a65726f000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620007426022836200086d565b91507f5f747265654c6576656c732073686f756c64206265206c657373207468616e2060008301527f33320000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000604082019050620007b26000830184620005ad565b92915050565b60006020820190508181036000830152620007d38162000621565b9050919050565b60006020820190508181036000830152620007f58162000663565b9050919050565b600060208201905081810360008301526200081781620006cb565b9050919050565b60006020820190508181036000830152620008398162000733565b9050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60006200088b82620008b0565b9050919050565b6000819050919050565b6000620008a9826200087e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b620008eb816200087e565b8114620008f757600080fd5b50565b620009058162000892565b81146200091157600080fd5b50565b6200091f816200089c565b81146200092b57600080fd5b50565b6200093981620008d0565b81146200094557600080fd5b50565b60805160e01c60a05160601c6112716200097c600039806105a05250806107855280610a285280610ae852506112716000f3fe6080604052600436106101095760003560e01c8063ba70f75711610095578063e829558811610064578063e829558814610386578063ec732959146103c3578063ed33639f146103ee578063f178e47c14610419578063fc7e9c6f1461045657610109565b8063ba70f757146102d7578063c2b40ae414610302578063cd87a3b41461033f578063e1fa8e841461036a57610109565b8063414a37ba116100dc578063414a37ba146101dc5780634ecf518b146102075780636d9833e31461023257806390eeb02b1461026f578063940992a31461029a57610109565b806317cc915c1461010e57806323c3617f1461014b5780632b7ac3f31461017457806338bf282e1461019f575b600080fd5b34801561011a57600080fd5b5061013560048036038101906101309190610ccd565b610481565b6040516101429190610fc3565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d9190610ccd565b6104a1565b005b34801561018057600080fd5b5061018961059e565b604051610196919061103d565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190610d1f565b6105c2565b6040516101d39190610fde565b60405180910390f35b3480156101e857600080fd5b506101f161075f565b6040516101fe91906110d8565b60405180910390f35b34801561021357600080fd5b5061021c610783565b60405161022991906110f3565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190610ccd565b6107a7565b6040516102669190610fc3565b60405180910390f35b34801561027b57600080fd5b50610284610849565b60405161029191906110f3565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190610ccd565b61085f565b6040516102ce91906110f3565b60405180910390f35b3480156102e357600080fd5b506102ec610882565b6040516102f99190610fde565b60405180910390f35b34801561030e57600080fd5b5061032960048036038101906103249190610d5b565b6108b0565b6040516103369190610fde565b60405180910390f35b34801561034b57600080fd5b506103546108c8565b60405161036191906110f3565b60405180910390f35b610384600480360381019061037f9190610ccd565b6108cd565b005b34801561039257600080fd5b506103ad60048036038101906103a89190610d5b565b61096e565b6040516103ba9190610fde565b60405180910390f35b3480156103cf57600080fd5b506103d861098f565b6040516103e591906110d8565b60405180910390f35b3480156103fa57600080fd5b506104036109b3565b6040516104109190611022565b60405180910390f35b34801561042557600080fd5b50610440600480360381019061043b9190610d5b565b6109d7565b60405161044d9190610fde565b60405180910390f35b34801561046257600080fd5b5061046b6109f8565b60405161047891906110f3565b60405180910390f35b60696020528060005260406000206000915054906101000a900460ff1681565b600260685414156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de906110b8565b60405180910390fd5b60026068819055506001606a600083815260200190815260200160002060008282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055507ff76acb6876b196558626d33c35a1b80b8ee56006031fffc155aef203b82d3d1281606a600084815260200190815260200160002060009054906101000a900463ffffffff1660405161058b929190610ff9565b60405180910390a1600160688190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062090611078565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c1061068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068590611098565b60405180910390fd5b610696610c6c565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b81526004016107069190610fa8565b60206040518083038186803b15801561071e57600080fd5b505afa158015610732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107569190610cf6565b91505092915050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060001b8214156107bd5760009050610844565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16606481106107e857fe5b01548314156107fb576001915050610844565b60008163ffffffff16141561080f57606490505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff1614156107d55760009150505b919050565b600360009054906101000a900463ffffffff1681565b606a6020528060005260406000206000915054906101000a900463ffffffff1681565b60006004600360009054906101000a900463ffffffff1663ffffffff16606481106108a957fe5b0154905090565b600481606481106108bd57fe5b016000915090505481565b606481565b60026068541415610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a906110b8565b60405180910390fd5b6002606881905550600061092682610a0e565b9050817ff7ac555522400ebfc2e6cf6afcb91b82fddc57028bd31fba319a10652ff80941824260405161095a92919061110e565b60405180910390a250600160688190555050565b6002818154811061097b57fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106109e457fe5b906000526020600020016000915090505481565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690507f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b90611058565b60405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060005b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610bd357600060028663ffffffff1681610b2c57fe5b0663ffffffff161415610b835783925060028163ffffffff1681548110610b4f57fe5b906000526020600020015491508360018263ffffffff1681548110610b7057fe5b9060005260206000200181905550610ba7565b60018163ffffffff1681548110610b9657fe5b906000526020600020015492508391505b610bb183836105c2565b935060028563ffffffff1681610bc357fe5b0494508080600101915050610ae6565b50606463ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681610bff57fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff1660648110610c4657fe5b01819055506001600360049054906101000a900463ffffffff1603945050505050919050565b6040518060400160405280600290602082028036833780820191505090505090565b600081359050610c9d8161120d565b92915050565b600081519050610cb28161120d565b92915050565b600081359050610cc781611224565b92915050565b600060208284031215610cdf57600080fd5b6000610ced84828501610c8e565b91505092915050565b600060208284031215610d0857600080fd5b6000610d1684828501610ca3565b91505092915050565b60008060408385031215610d3257600080fd5b6000610d4085828601610c8e565b9250506020610d5185828601610c8e565b9150509250929050565b600060208284031215610d6d57600080fd5b6000610d7b84828501610cb8565b91505092915050565b6000610d908383610e02565b60208301905092915050565b610da581611141565b610daf8184611159565b9250610dba82611137565b8060005b83811015610deb578151610dd28782610d84565b9650610ddd8361114c565b925050600181019050610dbe565b505050505050565b610dfc81611175565b82525050565b610e0b81611181565b82525050565b610e1a81611181565b82525050565b610e29816111c5565b82525050565b610e38816111e9565b82525050565b6000610e4b602f83611164565b91507f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160008301527f66732063616e20626520616464656400000000000000000000000000000000006020830152604082019050919050565b6000610eb1602083611164565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b6000610ef1602183611164565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f57601f83611164565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b610f93816111ab565b82525050565b610fa2816111b5565b82525050565b6000604082019050610fbd6000830184610d9c565b92915050565b6000602082019050610fd86000830184610df3565b92915050565b6000602082019050610ff36000830184610e11565b92915050565b600060408201905061100e6000830185610e11565b61101b6020830184610f99565b9392505050565b60006020820190506110376000830184610e20565b92915050565b60006020820190506110526000830184610e2f565b92915050565b6000602082019050818103600083015261107181610e3e565b9050919050565b6000602082019050818103600083015261109181610ea4565b9050919050565b600060208201905081810360008301526110b181610ee4565b9050919050565b600060208201905081810360008301526110d181610f4a565b9050919050565b60006020820190506110ed6000830184610f8a565b92915050565b60006020820190506111086000830184610f99565b92915050565b60006040820190506111236000830185610f99565b6111306020830184610f8a565b9392505050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006111d0826111d7565b9050919050565b60006111e28261118b565b9050919050565b60006111f4826111fb565b9050919050565b60006112068261118b565b9050919050565b61121681611181565b811461122157600080fd5b50565b61122d816111ab565b811461123857600080fd5b5056fea264697066735822122077b97cb5086d1c88ca0e078827cfbfad2c71605ff10fe3e7745b0cbae84c409164736f6c63430007030033";

export class ZKConspiracy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKConspiracy> {
    return super.deploy(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    ) as Promise<ZKConspiracy>;
  }
  getDeployTransaction(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    );
  }
  attach(address: string): ZKConspiracy {
    return super.attach(address) as ZKConspiracy;
  }
  connect(signer: Signer): ZKConspiracy__factory {
    return super.connect(signer) as ZKConspiracy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConspiracyInterface {
    return new utils.Interface(_abi) as ZKConspiracyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConspiracy {
    return new Contract(address, _abi, signerOrProvider) as ZKConspiracy;
  }
}

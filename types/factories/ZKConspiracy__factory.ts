/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKConspiracy, ZKConspiracyInterface } from "../ZKConspiracy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "attestee",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "attestations",
        type: "uint32",
      },
    ],
    name: "Attestation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Registration",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct Proof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_attestee",
        type: "bytes32",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract Hasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b506040516200210b3803806200210b83398181016040528101906200007b91906200053d565b818160008263ffffffff1611620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c090620007fc565b60405180910390fd5b60208263ffffffff161062000115576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010c906200081e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508163ffffffff1660808163ffffffff1660e01b8152505060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505060019003906000526020600020016000909190919091505560018190806001815401808255809150506001900390600052602060002001600090919091909150556000600190505b8363ffffffff168163ffffffff1610156200027657620002148283620002e860201b60201c565b9150600282908060018154018082558091505060019003906000526020600020016000909190919091505560018290806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050620001ed565b50620002898182620002e860201b60201c565b60046000606481106200029857fe5b018190555050505060016068819055508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505062000948565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1062000352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034990620007b8565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10620003ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b190620007da565b60405180910390fd5b620003c462000493565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b81526004016200043691906200079b565b60206040518083038186803b1580156200044f57600080fd5b505afa15801562000464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200048a919062000511565b91505092915050565b6040518060400160405280600290602082028036833780820191505090505090565b600081519050620004c681620008e0565b92915050565b600081519050620004dd81620008fa565b92915050565b600081519050620004f48162000914565b92915050565b6000815190506200050b816200092e565b92915050565b6000602082840312156200052457600080fd5b60006200053484828501620004cc565b91505092915050565b6000806000606084860312156200055357600080fd5b60006200056386828701620004e3565b93505060206200057686828701620004fa565b92505060406200058986828701620004b5565b9150509250925092565b6000620005a1838362000610565b60208301905092915050565b620005b8816200084a565b620005c4818462000862565b9250620005d18262000840565b8060005b8381101562000608578151620005ec878262000593565b9650620005f98362000855565b925050600181019050620005d5565b505050505050565b6200061b8162000892565b82525050565b6000620006306020836200086d565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b6000620006726021836200086d565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620006da6027836200086d565b91507f5f747265654c6576656c732073686f756c64206265206772656174657220746860008301527f616e207a65726f000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620007426022836200086d565b91507f5f747265654c6576656c732073686f756c64206265206c657373207468616e2060008301527f33320000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000604082019050620007b26000830184620005ad565b92915050565b60006020820190508181036000830152620007d38162000621565b9050919050565b60006020820190508181036000830152620007f58162000663565b9050919050565b600060208201905081810360008301526200081781620006cb565b9050919050565b60006020820190508181036000830152620008398162000733565b9050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60006200088b82620008b0565b9050919050565b6000819050919050565b6000620008a9826200087e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b620008eb816200087e565b8114620008f757600080fd5b50565b620009058162000892565b81146200091157600080fd5b50565b6200091f816200089c565b81146200092b57600080fd5b50565b6200093981620008d0565b81146200094557600080fd5b50565b60805160e01c60a05160601c61178a62000981600039806104a352806108365250806106885280610bcb5280610c8b525061178a6000f3fe6080604052600436106101095760003560e01c8063ba70f75711610095578063e829558811610064578063e829558814610386578063ec732959146103c3578063ed33639f146103ee578063f178e47c14610419578063fc7e9c6f1461045657610109565b8063ba70f757146102d7578063c2b40ae414610302578063cd87a3b41461033f578063e1fa8e841461036a57610109565b80634ecf518b116100dc5780634ecf518b146101de5780636d9833e31461020957806390eeb02b14610246578063940992a314610271578063a7632c85146102ae57610109565b806317cc915c1461010e5780632b7ac3f31461014b57806338bf282e14610176578063414a37ba146101b3575b600080fd5b34801561011a57600080fd5b5061013560048036038101906101309190610eca565b610481565b6040516101429190611403565b60405180910390f35b34801561015757600080fd5b506101606104a1565b60405161016d919061148b565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190610f1c565b6104c5565b6040516101aa919061141e565b60405180910390f35b3480156101bf57600080fd5b506101c8610662565b6040516101d59190611566565b60405180910390f35b3480156101ea57600080fd5b506101f3610686565b6040516102009190611581565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190610eca565b6106aa565b60405161023d9190611403565b60405180910390f35b34801561025257600080fd5b5061025b61074c565b6040516102689190611581565b60405180910390f35b34801561027d57600080fd5b5061029860048036038101906102939190610eca565b610762565b6040516102a59190611581565b60405180910390f35b3480156102ba57600080fd5b506102d560048036038101906102d09190610f58565b610785565b005b3480156102e357600080fd5b506102ec610a25565b6040516102f9919061141e565b60405180910390f35b34801561030e57600080fd5b5061032960048036038101906103249190610fbf565b610a53565b604051610336919061141e565b60405180910390f35b34801561034b57600080fd5b50610354610a6b565b6040516103619190611581565b60405180910390f35b610384600480360381019061037f9190610eca565b610a70565b005b34801561039257600080fd5b506103ad60048036038101906103a89190610fbf565b610b11565b6040516103ba919061141e565b60405180910390f35b3480156103cf57600080fd5b506103d8610b32565b6040516103e59190611566565b60405180910390f35b3480156103fa57600080fd5b50610403610b56565b6040516104109190611470565b60405180910390f35b34801561042557600080fd5b50610440600480360381019061043b9190610fbf565b610b7a565b60405161044d919061141e565b60405180910390f35b34801561046257600080fd5b5061046b610b9b565b6040516104789190611581565b60405180910390f35b60696020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1061052c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610523906114c6565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610591576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610588906114e6565b60405180910390fd5b610599610e0f565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b815260040161060991906113a1565b60206040518083038186803b15801561062157600080fd5b505afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610ef3565b91505092915050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060001b8214156106c05760009050610747565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16606481106106eb57fe5b01548314156106fe576001915050610747565b60008163ffffffff16141561071257606490505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff1614156106d85760009150505b919050565b600360009054906101000a900463ffffffff1681565b606a6020528060005260406000206000915054906101000a900463ffffffff1681565b600260685414156107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611546565b60405180910390fd5b60026068819055506069600083815260200190815260200160002060009054906101000a900460ff1615610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082b90611526565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e85600001866040018760c00160405180604001604052808960001c81526020018860001c8152506040518563ffffffff1660e01b81526004016108b694939291906113bc565b60206040518083038186803b1580156108ce57600080fd5b505afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190610ea1565b610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c90611506565b60405180910390fd5b60016069600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506001606a600083815260200190815260200160002060008282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff1602179055507fc0ef193ddb7cd7c2e52f686e8251e85ec7b324e5de4d341118c3e288db36d50d8183606a600085815260200190815260200160002060009054906101000a900463ffffffff16604051610a0f93929190611439565b60405180910390a1600160688190555050505050565b60006004600360009054906101000a900463ffffffff1663ffffffff1660648110610a4c57fe5b0154905090565b60048160648110610a6057fe5b016000915090505481565b606481565b60026068541415610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90611546565b60405180910390fd5b60026068819055506000610ac982610bb1565b9050817ff7ac555522400ebfc2e6cf6afcb91b82fddc57028bd31fba319a10652ff809418242604051610afd92919061159c565b60405180910390a250600160688190555050565b60028181548110610b1e57fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110610b8757fe5b906000526020600020016000915090505481565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690507f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e906114a6565b60405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060005b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610d7657600060028663ffffffff1681610ccf57fe5b0663ffffffff161415610d265783925060028163ffffffff1681548110610cf257fe5b906000526020600020015491508360018263ffffffff1681548110610d1357fe5b9060005260206000200181905550610d4a565b60018163ffffffff1681548110610d3957fe5b906000526020600020015492508391505b610d5483836104c5565b935060028563ffffffff1681610d6657fe5b0494508080600101915050610c89565b50606463ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681610da257fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff1660648110610de957fe5b01819055506001600360049054906101000a900463ffffffff1603945050505050919050565b6040518060400160405280600290602082028036833780820191505090505090565b600081519050610e408161170f565b92915050565b600081359050610e5581611726565b92915050565b600081519050610e6a81611726565b92915050565b60006101008284031215610e8357600080fd5b81905092915050565b600081359050610e9b8161173d565b92915050565b600060208284031215610eb357600080fd5b6000610ec184828501610e31565b91505092915050565b600060208284031215610edc57600080fd5b6000610eea84828501610e46565b91505092915050565b600060208284031215610f0557600080fd5b6000610f1384828501610e5b565b91505092915050565b60008060408385031215610f2f57600080fd5b6000610f3d85828601610e46565b9250506020610f4e85828601610e46565b9150509250929050565b6000806000806101608587031215610f6f57600080fd5b6000610f7d87828801610e70565b945050610100610f8f87828801610e46565b935050610120610fa187828801610e46565b925050610140610fb387828801610e46565b91505092959194509250565b600060208284031215610fd157600080fd5b6000610fdf84828501610e8c565b91505092915050565b6000610ff483836110e6565b60408301905092915050565b600061100c838361116c565b60208301905092915050565b60006110248383611374565b60208301905092915050565b611039816115e3565b611043818461162b565b925061104e826115c5565b8060005b8381101561108757611064828461165d565b61106e8782610fe8565b965061107983611604565b925050600181019050611052565b505050505050565b611098816115ee565b6110a28184611636565b92506110ad826115cf565b8060005b838110156110de5781516110c58782611000565b96506110d083611611565b9250506001810190506110b1565b505050505050565b6110f260408383611700565b5050565b61110260408383611700565b5050565b61110f816115f9565b6111198184611641565b9250611124826115d9565b8060005b8381101561115557815161113c8782611018565b96506111478361161e565b925050600181019050611128565b505050505050565b61116681611668565b82525050565b61117581611674565b82525050565b61118481611674565b82525050565b611193816116b8565b82525050565b6111a2816116dc565b82525050565b60006111b5602f8361164c565b91507f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160008301527f66732063616e20626520616464656400000000000000000000000000000000006020830152604082019050919050565b600061121b60208361164c565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b600061125b60218361164c565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112c160188361164c565b91507f496e76616c6964206d656d626572736869702070726f6f6600000000000000006000830152602082019050919050565b600061130160198361164c565b91507f557365722068617320616c7265616479206174746573746564000000000000006000830152602082019050919050565b6000611341601f8361164c565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b61137d8161169e565b82525050565b61138c8161169e565b82525050565b61139b816116a8565b82525050565b60006040820190506113b6600083018461108f565b92915050565b6000610140820190506113d260008301876110f6565b6113df6040830186611030565b6113ec60c08301856110f6565b6113fa610100830184611106565b95945050505050565b6000602082019050611418600083018461115d565b92915050565b6000602082019050611433600083018461117b565b92915050565b600060608201905061144e600083018661117b565b61145b602083018561117b565b6114686040830184611392565b949350505050565b6000602082019050611485600083018461118a565b92915050565b60006020820190506114a06000830184611199565b92915050565b600060208201905081810360008301526114bf816111a8565b9050919050565b600060208201905081810360008301526114df8161120e565b9050919050565b600060208201905081810360008301526114ff8161124e565b9050919050565b6000602082019050818103600083015261151f816112b4565b9050919050565b6000602082019050818103600083015261153f816112f4565b9050919050565b6000602082019050818103600083015261155f81611334565b9050919050565b600060208201905061157b6000830184611383565b92915050565b60006020820190506115966000830184611392565b92915050565b60006040820190506115b16000830185611392565b6115be6020830184611383565b9392505050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b6000604082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60006116c3826116ca565b9050919050565b60006116d58261167e565b9050919050565b60006116e7826116ee565b9050919050565b60006116f98261167e565b9050919050565b82818337600083830152505050565b61171881611668565b811461172357600080fd5b50565b61172f81611674565b811461173a57600080fd5b50565b6117468161169e565b811461175157600080fd5b5056fea2646970667358221220820dd01323eef8110b9afa0ed01937f0ee302b3ed7f81a6bce0e5d0d95e7604464736f6c63430007030033";

export class ZKConspiracy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKConspiracy> {
    return super.deploy(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    ) as Promise<ZKConspiracy>;
  }
  getDeployTransaction(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    );
  }
  attach(address: string): ZKConspiracy {
    return super.attach(address) as ZKConspiracy;
  }
  connect(signer: Signer): ZKConspiracy__factory {
    return super.connect(signer) as ZKConspiracy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConspiracyInterface {
    return new utils.Interface(_abi) as ZKConspiracyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConspiracy {
    return new Contract(address, _abi, signerOrProvider) as ZKConspiracy;
  }
}

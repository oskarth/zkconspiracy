/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKConspiracy, ZKConspiracyInterface } from "../ZKConspiracy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Registration",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract Hasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b5060405162001a2838038062001a2883398181016040528101906200007b91906200053d565b818160008263ffffffff1611620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c090620007fc565b60405180910390fd5b60208263ffffffff161062000115576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200010c906200081e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508163ffffffff1660808163ffffffff1660e01b8152505060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505060019003906000526020600020016000909190919091505560018190806001815401808255809150506001900390600052602060002001600090919091909150556000600190505b8363ffffffff168163ffffffff1610156200027657620002148283620002e860201b60201c565b9150600282908060018154018082558091505060019003906000526020600020016000909190919091505560018290806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050620001ed565b50620002898182620002e860201b60201c565b60046000606481106200029857fe5b018190555050505060016068819055508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050505062000948565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c1062000352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034990620007b8565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10620003ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b190620007da565b60405180910390fd5b620003c462000493565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b81526004016200043691906200079b565b60206040518083038186803b1580156200044f57600080fd5b505afa15801562000464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200048a919062000511565b91505092915050565b6040518060400160405280600290602082028036833780820191505090505090565b600081519050620004c681620008e0565b92915050565b600081519050620004dd81620008fa565b92915050565b600081519050620004f48162000914565b92915050565b6000815190506200050b816200092e565b92915050565b6000602082840312156200052457600080fd5b60006200053484828501620004cc565b91505092915050565b6000806000606084860312156200055357600080fd5b60006200056386828701620004e3565b93505060206200057686828701620004fa565b92505060406200058986828701620004b5565b9150509250925092565b6000620005a1838362000610565b60208301905092915050565b620005b8816200084a565b620005c4818462000862565b9250620005d18262000840565b8060005b8381101562000608578151620005ec878262000593565b9650620005f98362000855565b925050600181019050620005d5565b505050505050565b6200061b8162000892565b82525050565b6000620006306020836200086d565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b6000620006726021836200086d565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620006da6027836200086d565b91507f5f747265654c6576656c732073686f756c64206265206772656174657220746860008301527f616e207a65726f000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620007426022836200086d565b91507f5f747265654c6576656c732073686f756c64206265206c657373207468616e2060008301527f33320000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000604082019050620007b26000830184620005ad565b92915050565b60006020820190508181036000830152620007d38162000621565b9050919050565b60006020820190508181036000830152620007f58162000663565b9050919050565b600060208201905081810360008301526200081781620006cb565b9050919050565b60006020820190508181036000830152620008398162000733565b9050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60006200088b82620008b0565b9050919050565b6000819050919050565b6000620008a9826200087e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b620008eb816200087e565b8114620008f757600080fd5b50565b620009058162000892565b81146200091157600080fd5b50565b6200091f816200089c565b81146200092b57600080fd5b50565b6200093981620008d0565b81146200094557600080fd5b50565b60805160e01c60a05160601c6110ac6200097c6000398061042752508061060c528061088c528061094c52506110ac6000f3fe6080604052600436106100f35760003560e01c8063c2b40ae41161008a578063ec73295911610059578063ec73295914610347578063ed33639f14610372578063f178e47c1461039d578063fc7e9c6f146103da576100f3565b8063c2b40ae414610286578063cd87a3b4146102c3578063e1fa8e84146102ee578063e82955881461030a576100f3565b80634ecf518b116100c65780634ecf518b146101c85780636d9833e3146101f357806390eeb02b14610230578063ba70f7571461025b576100f3565b806317cc915c146100f85780632b7ac3f31461013557806338bf282e14610160578063414a37ba1461019d575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190610b31565b610405565b60405161012c9190610e27565b60405180910390f35b34801561014157600080fd5b5061014a610425565b6040516101579190610e78565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190610b83565b610449565b6040516101949190610e42565b60405180910390f35b3480156101a957600080fd5b506101b26105e6565b6040516101bf9190610f13565b60405180910390f35b3480156101d457600080fd5b506101dd61060a565b6040516101ea9190610f2e565b60405180910390f35b3480156101ff57600080fd5b5061021a60048036038101906102159190610b31565b61062e565b6040516102279190610e27565b60405180910390f35b34801561023c57600080fd5b506102456106d0565b6040516102529190610f2e565b60405180910390f35b34801561026757600080fd5b506102706106e6565b60405161027d9190610e42565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190610bbf565b610714565b6040516102ba9190610e42565b60405180910390f35b3480156102cf57600080fd5b506102d861072c565b6040516102e59190610f2e565b60405180910390f35b61030860048036038101906103039190610b31565b610731565b005b34801561031657600080fd5b50610331600480360381019061032c9190610bbf565b6107d2565b60405161033e9190610e42565b60405180910390f35b34801561035357600080fd5b5061035c6107f3565b6040516103699190610f13565b60405180910390f35b34801561037e57600080fd5b50610387610817565b6040516103949190610e5d565b60405180910390f35b3480156103a957600080fd5b506103c460048036038101906103bf9190610bbf565b61083b565b6040516103d19190610e42565b60405180910390f35b3480156103e657600080fd5b506103ef61085c565b6040516103fc9190610f2e565b60405180910390f35b60696020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c106104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a790610eb3565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610ed3565b60405180910390fd5b61051d610ad0565b604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b815260040161058d9190610e0c565b60206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd9190610b5a565b91505092915050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060001b82141561064457600090506106cb565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff166064811061066f57fe5b01548314156106825760019150506106cb565b60008163ffffffff16141561069657606490505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff16141561065c5760009150505b919050565b600360009054906101000a900463ffffffff1681565b60006004600360009054906101000a900463ffffffff1663ffffffff166064811061070d57fe5b0154905090565b6004816064811061072157fe5b016000915090505481565b606481565b60026068541415610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e90610ef3565b60405180910390fd5b6002606881905550600061078a82610872565b9050817ff7ac555522400ebfc2e6cf6afcb91b82fddc57028bd31fba319a10652ff8094182426040516107be929190610f49565b60405180910390a250600160688190555050565b600281815481106107df57fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061084857fe5b906000526020600020016000915090505481565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690507f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90610e93565b60405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060005b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610a3757600060028663ffffffff168161099057fe5b0663ffffffff1614156109e75783925060028163ffffffff16815481106109b357fe5b906000526020600020015491508360018263ffffffff16815481106109d457fe5b9060005260206000200181905550610a0b565b60018163ffffffff16815481106109fa57fe5b906000526020600020015492508391505b610a158383610449565b935060028563ffffffff1681610a2757fe5b049450808060010191505061094a565b50606463ffffffff166001600360009054906101000a900463ffffffff160163ffffffff1681610a6357fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff1660648110610aaa57fe5b01819055506001600360049054906101000a900463ffffffff1603945050505050919050565b6040518060400160405280600290602082028036833780820191505090505090565b600081359050610b0181611048565b92915050565b600081519050610b1681611048565b92915050565b600081359050610b2b8161105f565b92915050565b600060208284031215610b4357600080fd5b6000610b5184828501610af2565b91505092915050565b600060208284031215610b6c57600080fd5b6000610b7a84828501610b07565b91505092915050565b60008060408385031215610b9657600080fd5b6000610ba485828601610af2565b9250506020610bb585828601610af2565b9150509250929050565b600060208284031215610bd157600080fd5b6000610bdf84828501610b1c565b91505092915050565b6000610bf48383610c66565b60208301905092915050565b610c0981610f7c565b610c138184610f94565b9250610c1e82610f72565b8060005b83811015610c4f578151610c368782610be8565b9650610c4183610f87565b925050600181019050610c22565b505050505050565b610c6081610fb0565b82525050565b610c6f81610fbc565b82525050565b610c7e81610fbc565b82525050565b610c8d81611000565b82525050565b610c9c81611024565b82525050565b6000610caf602f83610f9f565b91507f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160008301527f66732063616e20626520616464656400000000000000000000000000000000006020830152604082019050919050565b6000610d15602083610f9f565b91507f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646000830152602082019050919050565b6000610d55602183610f9f565b91507f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008301527f64000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610dbb601f83610f9f565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b610df781610fe6565b82525050565b610e0681610ff0565b82525050565b6000604082019050610e216000830184610c00565b92915050565b6000602082019050610e3c6000830184610c57565b92915050565b6000602082019050610e576000830184610c75565b92915050565b6000602082019050610e726000830184610c84565b92915050565b6000602082019050610e8d6000830184610c93565b92915050565b60006020820190508181036000830152610eac81610ca2565b9050919050565b60006020820190508181036000830152610ecc81610d08565b9050919050565b60006020820190508181036000830152610eec81610d48565b9050919050565b60006020820190508181036000830152610f0c81610dae565b9050919050565b6000602082019050610f286000830184610dee565b92915050565b6000602082019050610f436000830184610dfd565b92915050565b6000604082019050610f5e6000830185610dfd565b610f6b6020830184610dee565b9392505050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600061100b82611012565b9050919050565b600061101d82610fc6565b9050919050565b600061102f82611036565b9050919050565b600061104182610fc6565b9050919050565b61105181610fbc565b811461105c57600080fd5b50565b61106881610fe6565b811461107357600080fd5b5056fea2646970667358221220a6dc9303ea8a9eae6b5cfbee52c8df076ff28287eef207624d0f6639c4421fe964736f6c63430007030033";

export class ZKConspiracy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKConspiracy> {
    return super.deploy(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    ) as Promise<ZKConspiracy>;
  }
  getDeployTransaction(
    _verifier: string,
    _merkleTreeHeight: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _merkleTreeHeight,
      _hasher,
      overrides || {}
    );
  }
  attach(address: string): ZKConspiracy {
    return super.attach(address) as ZKConspiracy;
  }
  connect(signer: Signer): ZKConspiracy__factory {
    return super.connect(signer) as ZKConspiracy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConspiracyInterface {
    return new utils.Interface(_abi) as ZKConspiracyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConspiracy {
    return new Contract(address, _abi, signerOrProvider) as ZKConspiracy;
  }
}

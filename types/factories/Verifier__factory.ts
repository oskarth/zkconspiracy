/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061133f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61018f600480360361014081101561004757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156100fc578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100a8565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101a7565b60405180821515815260200191505060405180910390f35b60006101b16111c7565b6040518060400160405280876000600281106101c957fe5b60200201518152602001876001600281106101e057fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061021357fe5b602002015160006002811061022457fe5b602002015181526020018860006002811061023b57fe5b602002015160016002811061024c57fe5b6020020151815250815260200160405180604001604052808860016002811061027157fe5b602002015160006002811061028257fe5b602002015181526020018860016002811061029957fe5b60200201516001600281106102aa57fe5b602002015181525081525081602001819052506040518060400160405280856000600281106102d557fe5b60200201518152602001856001600281106102ec57fe5b602002015181525081604001819052506060600267ffffffffffffffff8111801561031657600080fd5b506040519080825280602002602001820160405280156103455781602001602082028036833780820191505090505b50905060005b600281101561038a5784816002811061036057fe5b602002015182828151811061037157fe5b602002602001018181525050808060010191505061034b565b50600061039782846103b7565b14156103a8576001925050506103af565b6000925050505b949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506103e56111fa565b6103ed6105e8565b905080608001515160018651011461046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f76657269666965722d6261642d696e707574000000000000000000000000000081525060200191505060405180910390fd5b610475611241565b6040518060400160405280600081526020016000815250905060005b865181101561057157838782815181106104a757fe5b602002602001015110610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640081525060200191505060405180910390fd5b6105628261055d8560800151600185018151811061053c57fe5b60200260200101518a858151811061055057fe5b6020026020010151610a4d565b610b48565b91508080600101915050610491565b5061059481836080015160008151811061058757fe5b6020026020010151610b48565b90506105ca6105a68660000151610c62565b8660200151846000015185602001518587604001518b604001518960600151610cfc565b6105da57600193505050506105e2565b600093505050505b92915050565b6105f06111fa565b60405180604001604052807f2b6d4650a4a9984dd255a254717ce985d4a2625229fa63ba1268f0c8f97af9eb81526020017f22f3991d50b793a3660fa6ad8ce156ac3eb478b77e8b0b74ffdf4be654c5610d8152508160000181905250604051806040016040528060405180604001604052807f0e27d2438600b41133385b48fc242556e81b44ab4d0ee9a3376da7315876c2ba81526020017f074f8374c9ddae90032fb99308af80e087027dac3ec8f203bd7ee80d8b54bb44815250815260200160405180604001604052807f218374fdb8b41d2b36cdf8b50c9a925631381f50fa6b9ad5d281a172ad21293181526020017f0b04b6269c1b07424f6a6985dfab0cefd704a35cae92e15048f533f4c5da412b8152508152508160200181905250604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8152508152508160400181905250604051806040016040528060405180604001604052807f2ecfc70875cc3e16e661354a0c7b8d2016d1f4093cb6b30ef164c5d10f91ebfd81526020017f052757557db49bfeda9f535bc3ef8e5a51fd2fbcb97bef2fd74abcd4d3f94dcd815250815260200160405180604001604052807f043f4bb541e209469fdd87ced06abb9a842aabeb5162cdb47368d5e188afe82c81526020017f02206ab59a572fd82aa7c2ce27818d40c1bf15e65907386f6946934487eaf0e68152508152508160600181905250600367ffffffffffffffff811180156108b457600080fd5b506040519080825280602002602001820160405280156108ee57816020015b6108db611241565b8152602001906001900390816108d35790505b50816080018190525060405180604001604052807f0f0023113f7edefdfbe4357d51573b68f462bd58d44be90bcb9c9a88b48e73c781526020017f0419ffe773bd27f1b270bc2e3106e714090e99962f5997322e49beff4341e47a815250816080015160008151811061095d57fe5b602002602001018190525060405180604001604052807f10e3eb752e63ac1337e39efd0ef9a38e57c217933bb6d0a25e98ce20011fd68e81526020017f0a87c45507b26c5452ffd33113d75012d02ee72bc1ecd57f5b552c5d2f16122a81525081608001516001815181106109ce57fe5b602002602001018190525060405180604001604052807f2d31b498705608d93101f6936435c3b4344b4619ba51089c4f939ccd35b2b73881526020017f149e1ce892dc14733fd3e8a21635a34c06e46c50db46fccc6b4064a0e301355e8152508160800151600281518110610a3f57fe5b602002602001018190525090565b610a55611241565b610a5d61125b565b836000015181600060038110610a6f57fe5b602002018181525050836020015181600160038110610a8a57fe5b6020020181815250508281600260038110610aa157fe5b602002018181525050600060608360808460076107d05a03fa90508060008114610aca57610acc565bfe5b5080610b40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6d756c2d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610b50611241565b610b5861127d565b836000015181600060048110610b6a57fe5b602002018181525050836020015181600160048110610b8557fe5b602002018181525050826000015181600260048110610ba057fe5b602002018181525050826020015181600360048110610bbb57fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114610be457610be6565bfe5b5080610c5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6164642d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610c6a611241565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610ca7575060008360200151145b15610ccb576040518060400160405280600081526020016000815250915050610cf7565b60405180604001604052808460000151815260200182856020015181610ced57fe5b0683038152509150505b919050565b60006060600467ffffffffffffffff81118015610d1857600080fd5b50604051908082528060200260200182016040528015610d5257816020015b610d3f611241565b815260200190600190039081610d375790505b5090506060600467ffffffffffffffff81118015610d6f57600080fd5b50604051908082528060200260200182016040528015610da957816020015b610d9661129f565b815260200190600190039081610d8e5790505b5090508a82600081518110610dba57fe5b60200260200101819052508882600181518110610dd357fe5b60200260200101819052508682600281518110610dec57fe5b60200260200101819052508482600381518110610e0557fe5b60200260200101819052508981600081518110610e1e57fe5b60200260200101819052508781600181518110610e3757fe5b60200260200101819052508581600281518110610e5057fe5b60200260200101819052508381600381518110610e6957fe5b6020026020010181905250610e7e8282610e8e565b9250505098975050505050505050565b60008151835114610f07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f70616972696e672d6c656e677468732d6661696c65640000000000000000000081525060200191505060405180910390fd5b600083519050600060068202905060608167ffffffffffffffff81118015610f2e57600080fd5b50604051908082528060200260200182016040528015610f5d5781602001602082028036833780820191505090505b50905060005b8381101561110057868181518110610f7757fe5b602002602001015160000151826000600684020181518110610f9557fe5b602002602001018181525050868181518110610fad57fe5b602002602001015160200151826001600684020181518110610fcb57fe5b602002602001018181525050858181518110610fe357fe5b602002602001015160000151600060028110610ffb57fe5b602002015182600260068402018151811061101257fe5b60200260200101818152505085818151811061102a57fe5b60200260200101516000015160016002811061104257fe5b602002015182600360068402018151811061105957fe5b60200260200101818152505085818151811061107157fe5b60200260200101516020015160006002811061108957fe5b60200201518260046006840201815181106110a057fe5b6020026020010181815250508581815181106110b857fe5b6020026020010151602001516001600281106110d057fe5b60200201518260056006840201815181106110e757fe5b6020026020010181815250508080600101915050610f63565b506111096112c5565b6000602082602086026020860160086107d05a03fa9050806000811461112e57611130565bfe5b50806111a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f70616972696e672d6f70636f64652d6661696c6564000000000000000000000081525060200191505060405180910390fd5b6000826000600181106111b357fe5b602002015114159550505050505092915050565b60405180606001604052806111da611241565b81526020016111e761129f565b81526020016111f4611241565b81525090565b6040518060a0016040528061120d611241565b815260200161121a61129f565b815260200161122761129f565b815260200161123461129f565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b60405180604001604052806112b26112e7565b81526020016112bf6112e7565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b604051806040016040528060029060208202803683378082019150509050509056fea2646970667358221220ab381d2513b65b00211dd42222572bb4830353d50771cf211abfab76fe09291364736f6c63430007030033";

export class Verifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
